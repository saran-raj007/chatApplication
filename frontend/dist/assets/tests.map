{"version":3,"sources":["demoapp/tests/app.jshint.js","demoapp/tests/controllers/chat.jshint.js","demoapp/tests/controllers/login.jshint.js","demoapp/tests/controllers/signup.jshint.js","demoapp/tests/helpers/checkPermission.jshint.js","demoapp/tests/helpers/destroy-app.js","demoapp/tests/helpers/destroy-app.jshint.js","demoapp/tests/helpers/eq.jshint.js","demoapp/tests/helpers/module-for-acceptance.js","demoapp/tests/helpers/module-for-acceptance.jshint.js","demoapp/tests/helpers/neq.jshint.js","demoapp/tests/helpers/resolver.js","demoapp/tests/helpers/resolver.jshint.js","demoapp/tests/helpers/start-app.js","demoapp/tests/helpers/start-app.jshint.js","demoapp/tests/integration/components/permission-checker-test.js","demoapp/tests/integration/components/permission-checker-test.jshint.js","demoapp/tests/router.jshint.js","demoapp/tests/routes/chat.jshint.js","demoapp/tests/routes/login.jshint.js","demoapp/tests/routes/signup.jshint.js","demoapp/tests/services/storage-service.jshint.js","demoapp/tests/services/user-service.jshint.js","demoapp/tests/test-helper.js","demoapp/tests/test-helper.jshint.js","demoapp/tests/unit/controllers/chat-test.js","demoapp/tests/unit/controllers/chat-test.jshint.js","demoapp/tests/unit/routes/chat-test.js","demoapp/tests/unit/routes/chat-test.jshint.js","demoapp/tests/unit/routes/login-test.js","demoapp/tests/unit/routes/login-test.jshint.js","demoapp/tests/unit/routes/signup-test.js","demoapp/tests/unit/routes/signup-test.jshint.js","demoapp/tests/utils/crypto.jshint.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["define('demoapp/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'app.js should pass jshint.\\napp.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\napp.js: line 2, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\napp.js: line 3, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\napp.js: line 4, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\napp.js: line 5, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\napp.js: line 9, col 1, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\napp.js: line 16, col 3, \\'object short notation\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\napp.js: line 21, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n8 errors');\n  });\n});","define('demoapp/tests/controllers/chat.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/chat.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/chat.js should pass jshint.\\ncontrollers/chat.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 2, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 3, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 5, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 8, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 60, col 5, \\'concise methods\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 61, col 21, \\'spread operator\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 63, col 9, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 67, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 72, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 72, col 40, \\'template literal syntax\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 73, col 30, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 74, col 38, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 75, col 17, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 76, col 17, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 78, col 78, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 81, col 21, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 89, col 25, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 90, col 25, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 96, col 25, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 135, col 21, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 135, col 36, \\'template literal syntax\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 152, col 31, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 153, col 36, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 167, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 168, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 171, col 14, Missing semicolon.\\ncontrollers/chat.js: line 180, col 41, Missing semicolon.\\ncontrollers/chat.js: line 189, col 9, \\'concise methods\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 190, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 192, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 208, col 21, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 209, col 21, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 245, col 17, \\'concise methods\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 256, col 34, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 256, col 42, \\'for of\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 258, col 37, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 260, col 37, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 262, col 45, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 260, col 74, Functions declared within loops referencing an outer scoped variable may lead to confusing semantics. (CryptoUtils, msg, key, privateKey, console)\\ncontrollers/chat.js: line 284, col 37, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 284, col 52, \\'template literal syntax\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 286, col 37, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 303, col 33, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 304, col 52, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 305, col 49, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 306, col 48, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 319, col 33, \\'promises\\' is already defined.\\ncontrollers/chat.js: line 326, col 33, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 326, col 48, \\'for of\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 327, col 92, Missing semicolon.\\ncontrollers/chat.js: line 328, col 103, Missing semicolon.\\ncontrollers/chat.js: line 329, col 101, Missing semicolon.\\ncontrollers/chat.js: line 332, col 33, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 332, col 41, \\'for of\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 333, col 33, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 335, col 37, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 335, col 74, Functions declared within loops referencing an outer scoped variable may lead to confusing semantics. (CryptoUtils, msg, privateKey, msg_pack, console)\\ncontrollers/chat.js: line 359, col 37, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 359, col 52, \\'template literal syntax\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 361, col 37, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 378, col 33, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 379, col 52, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 380, col 49, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 381, col 48, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 417, col 17, \\'concise methods\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 423, col 9, \\'concise methods\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 424, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 425, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 429, col 21, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 430, col 21, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 485, col 9, \\'concise methods\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 503, col 9, \\'concise methods\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 517, col 9, \\'concise methods\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 525, col 9, \\'concise methods\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 526, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 527, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 529, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 556, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 557, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 558, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 559, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 560, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 561, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 562, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 563, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 564, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 565, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 567, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 567, col 24, \\'template literal syntax\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 569, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 583, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 584, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 585, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 595, col 17, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 613, col 21, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 619, col 29, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 666, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 667, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 688, col 9, \\'concise methods\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 689, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 694, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 704, col 25, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 704, col 33, \\'for of\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 719, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 720, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 745, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 755, col 25, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 755, col 33, \\'for of\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 769, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 770, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 793, col 9, \\'concise methods\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 804, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 810, col 17, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 813, col 15, Missing semicolon.\\ncontrollers/chat.js: line 816, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 817, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 842, col 9, \\'concise methods\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 851, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 853, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 854, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 855, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 857, col 14, Missing semicolon.\\ncontrollers/chat.js: line 865, col 25, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 865, col 34, \\'for of\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 886, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 888, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 889, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 890, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 891, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 892, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 893, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 894, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 895, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 896, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 898, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 902, col 57, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 903, col 38, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 904, col 25, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 906, col 59, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 920, col 44, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 921, col 17, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 925, col 17, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 937, col 30, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 952, col 30, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 956, col 44, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 957, col 38, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 958, col 25, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 963, col 36, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 964, col 95, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 969, col 21, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 972, col 26, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 972, col 34, \\'for of\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 973, col 25, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 974, col 25, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 976, col 30, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 976, col 41, \\'for of\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 978, col 33, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 980, col 33, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 981, col 51, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 981, col 51, Functions declared within loops referencing an outer scoped variable may lead to confusing semantics. (window)\\ncontrollers/chat.js: line 984, col 55, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 984, col 55, Functions declared within loops referencing an outer scoped variable may lead to confusing semantics. (CryptoUtils, member)\\ncontrollers/chat.js: line 987, col 51, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 987, col 51, Functions declared within loops referencing an outer scoped variable may lead to confusing semantics. (forkKeys, member, console)\\ncontrollers/chat.js: line 1001, col 25, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1011, col 25, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1011, col 81, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 1011, col 80, Functions declared within loops referencing an outer scoped variable may lead to confusing semantics. (newForkMemberMessage)\\ncontrollers/chat.js: line 1019, col 26, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 1032, col 26, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 1035, col 32, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 1049, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1051, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1068, col 78, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 1081, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1087, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1100, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1102, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1117, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1118, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1119, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1120, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1121, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1121, col 66, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 1122, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1123, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1125, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1126, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1129, col 17, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1132, col 21, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1133, col 21, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1146, col 29, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1147, col 33, Misleading line break before \\'?\\'; readers may interpret this as an expression boundary.\\ncontrollers/chat.js: line 1149, col 37, Misleading line break before \\'?\\'; readers may interpret this as an expression boundary.\\ncontrollers/chat.js: line 1153, col 33, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1154, col 51, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 1155, col 55, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 1156, col 51, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 1157, col 41, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1164, col 50, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 1169, col 101, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 1193, col 33, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1193, col 103, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 1194, col 37, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1194, col 81, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 1196, col 59, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 1197, col 63, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 1198, col 59, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 1198, col 65, \\'computed property names\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 1201, col 82, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 1215, col 21, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1252, col 32, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/chat.js: line 1260, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1261, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1261, col 47, Missing semicolon.\\ncontrollers/chat.js: line 1273, col 21, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1274, col 26, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1274, col 34, \\'for of\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1294, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1305, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1317, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1318, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1319, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1320, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1324, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1329, col 14, Missing semicolon.\\ncontrollers/chat.js: line 1349, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1350, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1360, col 24, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1360, col 33, \\'for of\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1374, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1375, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1378, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1381, col 14, Missing semicolon.\\ncontrollers/chat.js: line 1389, col 25, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1389, col 33, \\'for of\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1406, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1407, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1408, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1409, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1411, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1415, col 14, Missing semicolon.\\ncontrollers/chat.js: line 1434, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1435, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1436, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1440, col 14, Missing semicolon.\\ncontrollers/chat.js: line 1460, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1461, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1462, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1465, col 14, Missing semicolon.\\ncontrollers/chat.js: line 1484, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1485, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1486, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1494, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1503, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1509, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1510, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1518, col 25, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1518, col 34, \\'for of\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1530, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1531, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/chat.js: line 1536, col 14, Missing semicolon.\\n\\n263 errors');\n  });\n});","define('demoapp/tests/controllers/login.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/login.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/login.js should pass jshint.\\ncontrollers/login.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/login.js: line 2, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/login.js: line 4, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/login.js: line 6, col 9, \\'concise methods\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/login.js: line 7, col 13, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/login.js: line 8, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/login.js: line 9, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\n\\n7 errors');\n  });\n});","define('demoapp/tests/controllers/signup.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/signup.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/signup.js should pass jshint.\\ncontrollers/signup.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/signup.js: line 2, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/signup.js: line 3, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/signup.js: line 4, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/signup.js: line 7, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/signup.js: line 10, col 10, \\'concise methods\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/signup.js: line 12, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/signup.js: line 13, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/signup.js: line 14, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\ncontrollers/signup.js: line 15, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\n\\n10 errors');\n  });\n});","define('demoapp/tests/helpers/checkPermission.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/checkPermission.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'helpers/checkPermission.js should pass jshint.\\nhelpers/checkPermission.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n1 error');\n  });\n});","define('demoapp/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('demoapp/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/destroy-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('demoapp/tests/helpers/eq.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/eq.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'helpers/eq.js should pass jshint.\\nhelpers/eq.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nhelpers/eq.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\nhelpers/eq.js: line 7, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n3 errors');\n  });\n});","define('demoapp/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'demoapp/tests/helpers/start-app', 'demoapp/tests/helpers/destroy-app'], function (exports, _qunit, _demoappTestsHelpersStartApp, _demoappTestsHelpersDestroyApp) {\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _demoappTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        (0, _demoappTestsHelpersDestroyApp['default'])(this.application);\n\n        if (options.afterEach) {\n          options.afterEach.apply(this, arguments);\n        }\n      }\n    });\n  };\n});","define('demoapp/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/module-for-acceptance.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('demoapp/tests/helpers/neq.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/neq.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'helpers/neq.js should pass jshint.\\nhelpers/neq.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nhelpers/neq.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\nhelpers/neq.js: line 7, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n3 errors');\n  });\n});","define('demoapp/tests/helpers/resolver', ['exports', 'ember/resolver', 'demoapp/config/environment'], function (exports, _emberResolver, _demoappConfigEnvironment) {\n\n  var resolver = _emberResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _demoappConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _demoappConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('demoapp/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('demoapp/tests/helpers/start-app', ['exports', 'ember', 'demoapp/app', 'demoapp/config/environment'], function (exports, _ember, _demoappApp, _demoappConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _demoappConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _demoappApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('demoapp/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/start-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('demoapp/tests/integration/components/permission-checker-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('permission-checker', 'Integration | Component | permission checker', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\" + EOL + EOL +\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'revision': 'Ember@1.13.12',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 22\n            }\n          }\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'permission-checker', ['loc', [null, [1, 0], [1, 22]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\" + EOL +\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'revision': 'Ember@1.13.12',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'revision': 'Ember@1.13.12',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'permission-checker', [], [], 0, null, ['loc', [null, [2, 4], [4, 27]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('demoapp/tests/integration/components/permission-checker-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/permission-checker-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/permission-checker-test.js should pass jshint.');\n  });\n});","define('demoapp/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - router.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'router.js should pass jshint.\\nrouter.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nrouter.js: line 2, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nrouter.js: line 4, col 1, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\nrouter.js: line 14, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n4 errors');\n  });\n});","define('demoapp/tests/routes/chat.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/chat.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/chat.js should pass jshint.\\nroutes/chat.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nroutes/chat.js: line 2, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nroutes/chat.js: line 4, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\nroutes/chat.js: line 5, col 5, \\'concise methods\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\nroutes/chat.js: line 10, col 23, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\nroutes/chat.js: line 14, col 24, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n6 errors');\n  });\n});","define('demoapp/tests/routes/login.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/login.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/login.js should pass jshint.\\nroutes/login.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nroutes/login.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('demoapp/tests/routes/signup.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/signup.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/signup.js should pass jshint.\\nroutes/signup.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nroutes/signup.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('demoapp/tests/services/storage-service.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - services/storage-service.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'services/storage-service.js should pass jshint.\\nservices/storage-service.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nservices/storage-service.js: line 3, col 1, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\nservices/storage-service.js: line 68, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n3 errors');\n  });\n});","define('demoapp/tests/services/user-service.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - services/user-service.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/user-service.js should pass jshint.');\n  });\n});","define('demoapp/tests/test-helper', ['exports', 'demoapp/tests/helpers/resolver', 'ember-qunit'], function (exports, _demoappTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_demoappTestsHelpersResolver['default']);\n});","define('demoapp/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - test-helper.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","define('demoapp/tests/unit/controllers/chat-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:chat', 'Unit | Controller | chat', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('demoapp/tests/unit/controllers/chat-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers/chat-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/chat-test.js should pass jshint.');\n  });\n});","define('demoapp/tests/unit/routes/chat-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:chat', 'Unit | Route | chat', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('demoapp/tests/unit/routes/chat-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes/chat-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/chat-test.js should pass jshint.');\n  });\n});","define('demoapp/tests/unit/routes/login-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:login', 'Unit | Route | login', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('demoapp/tests/unit/routes/login-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes/login-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/login-test.js should pass jshint.');\n  });\n});","define('demoapp/tests/unit/routes/signup-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:signup', 'Unit | Route | signup', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('demoapp/tests/unit/routes/signup-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes/signup-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/signup-test.js should pass jshint.');\n  });\n});","define('demoapp/tests/utils/crypto.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - utils/crypto.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'utils/crypto.js should pass jshint.\\nutils/crypto.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nutils/crypto.js: line 3, col 1, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\nutils/crypto.js: line 98, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\nutils/crypto.js: line 98, col 85, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\nutils/crypto.js: line 107, col 17, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\nutils/crypto.js: line 107, col 90, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\nutils/crypto.js: line 142, col 58, \\'spread operator\\' is only available in ES6 (use \\'esversion: 6\\').\\nutils/crypto.js: line 143, col 50, \\'spread operator\\' is only available in ES6 (use \\'esversion: 6\\').\\nutils/crypto.js: line 152, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\nutils/crypto.js: line 152, col 81, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\nutils/crypto.js: line 153, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\nutils/crypto.js: line 153, col 66, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\nutils/crypto.js: line 160, col 13, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\nutils/crypto.js: line 178, col 17, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\nutils/crypto.js: line 179, col 17, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\nutils/crypto.js: line 182, col 21, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\nutils/crypto.js: line 182, col 62, \\'spread operator\\' is only available in ES6 (use \\'esversion: 6\\').\\nutils/crypto.js: line 183, col 21, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\nutils/crypto.js: line 183, col 63, \\'spread operator\\' is only available in ES6 (use \\'esversion: 6\\').\\nutils/crypto.js: line 195, col 9, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\nutils/crypto.js: line 195, col 67, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\nutils/crypto.js: line 196, col 9, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\nutils/crypto.js: line 196, col 68, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\nutils/crypto.js: line 245, col 12, Missing semicolon.\\nutils/crypto.js: line 250, col 43, Missing semicolon.\\nutils/crypto.js: line 253, col 17, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\nutils/crypto.js: line 253, col 98, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\nutils/crypto.js: line 254, col 17, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\nutils/crypto.js: line 254, col 72, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\nutils/crypto.js: line 254, col 92, Missing semicolon.\\nutils/crypto.js: line 255, col 41, Missing semicolon.\\nutils/crypto.js: line 284, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n32 errors');\n  });\n});","/* jshint ignore:start */\n\nrequire('demoapp/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChfile":"tests.js"}